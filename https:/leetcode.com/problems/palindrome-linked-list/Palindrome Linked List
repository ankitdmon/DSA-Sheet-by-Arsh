class Solution {
    private:
        ListNode* getMid(ListNode* head){
            ListNode* fast = head->next, *slow = head;
            while(fast != NULL && fast->next != NULL){
                fast = fast->next->next;
                slow = slow->next;
            }
            return slow;
        }
    
        ListNode* getReverse(ListNode* head){
            ListNode* curr = head, *prev = NULL;
            while(curr!= NULL){
                ListNode* next = curr->next;
                curr->next = prev;
                prev = curr;
                curr = next;
            }
            return prev;
        }
    
public:
    bool isPalindrome(ListNode* head) {
        if(head == NULL || head->next == NULL){
            return true;
        }
        
        ListNode* mid = getMid(head);
        
        mid->next = getReverse(mid->next);
        
        ListNode* ptr1 = head;
        ListNode* ptr2 = mid->next;
        
        while(ptr2 != NULL){
            if(ptr1->val != ptr2->val){
                return false;
            }
            ptr1 = ptr1->next;
            ptr2 = ptr2->next;
        }
        return true;
    }
};
