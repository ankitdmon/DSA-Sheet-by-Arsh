# DSA-Sheet-by-Arsh

// { Driver Code Starts
#include <bits/stdc++.h>
using namespace std;

 // } Driver Code Ends
class Solution{
    public:
    long long findMinDiff(vector<long long> a, long long n, long long m){
        
        // if no of packets or no of studentrs are zero
        if(n == 0 || m == 0){
            return 0;
        }
        
        // if no of students are greater than no of packets
        if(m > n){
            return 0;
        }
        
        // sort all the elenets of array
        sort(a.begin(), a.end());
        
        long long maxDiff = INT_MAX;
        
        // use two pointer approch  second pointer can not go out of array's range
        for(int i = 0; i+m-1 < n; i++){
            int diff = a[i+m-1] - a[i];
            if(diff < maxDiff){
                maxDiff = diff;
            }
        }
        return maxDiff;
    }   
};

// { Driver Code Starts.
int main() {
	long long t;
	cin>>t;
	while(t--)
	{
		long long n;
		cin>>n;
		vector<long long> a;
		long long x;
		for(long long i=0;i<n;i++)
		{
			cin>>x;
			a.push_back(x);
		}
		
		long long m;
		cin>>m;
		Solution ob;
		cout<<ob.findMinDiff(a,n,m)<<endl;
	}
	return 0;
}  // } Driver Code Ends
